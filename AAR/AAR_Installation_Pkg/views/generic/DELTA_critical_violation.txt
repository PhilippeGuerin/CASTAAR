SELECT 
   cv.snapshot,
   cv.snapshot_date,
   cv.snapshot_time,
   cv.snapshot_order,
   cv.appname,
   cv.appResults.reference.name as metric_name,
   cv.appResults.`result`.grade as metric_grade,
   cv.appResults.`result`.evolutionSummary.criticalViolationsInNewAndModifiedCode as cvNewAndModifiedCode,
   cv.appResults.`result`.evolutionSummary.totalCriticalViolations as cvTotal,
   cv.appResults.`result`.evolutionSummary.addedCriticalViolations as cvAdded,
   cv.appResults.`result`.evolutionSummary.removedCriticalViolations as cvRemoved
FROM
(SELECT 
   cvj.number as snapshot, 
   cvj.`date`.isoDate as snapshot_date,
   cvj.`date`.`time` as snapshot_time,
   DENSE_RANK() OVER(PARTITION BY cvj.application.name ORDER BY cvj.number DESC) as snapshot_order,
   cvj.application.name as appname,
   FLATTEN(cvj.applicationResults) as appResults 
FROM `dfs`.`XXX Inputs`.`./CLIENT-CriticalViolation.json` as cvj) as cv
WHERE cv.snapshot_order < 3
